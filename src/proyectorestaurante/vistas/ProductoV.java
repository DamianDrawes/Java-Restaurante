/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectorestaurante.vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectorestaurante.AccesoAdatos.MesaData;
import proyectorestaurante.AccesoAdatos.MeseroData;
import proyectorestaurante.AccesoAdatos.ProductoData;
import proyectorestaurante.entidades.Mesa;
import proyectorestaurante.entidades.Mesero;
import proyectorestaurante.entidades.Producto;

/**
 *
 * @author Lourdes
 */
public class ProductoV extends javax.swing.JInternalFrame {

    private DefaultTableModel modelo1 = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };
    private ArrayList<Producto> listaProductos;
    private ProductoData pd = new ProductoData();
    private Producto pro = new Producto();

    /**
     * Creates new form ProductoV
     */
    public ProductoV() {
        initComponents();
        armarCabecera1();
        armarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtCodigo = new javax.swing.JTextField();
        jtNombre = new javax.swing.JTextField();
        jtPrecio = new javax.swing.JTextField();
        jtStock = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jrEstado = new javax.swing.JRadioButton();
        jbBuscar = new javax.swing.JButton();
        jbNuevo = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Menu");

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/menu.png"))); // NOI18N
        jLabel1.setText("MENU");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("CÃ“DIGO:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("NOMBRE:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("PRECIO:");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("STOCK:");

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ESTADO:");

        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/lupa_1.png"))); // NOI18N
        jbBuscar.setText("BUSCAR");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jbNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/nuevo.png"))); // NOI18N
        jbNuevo.setText("NUEVO");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/GuardarTodo.png"))); // NOI18N
        jbGuardar.setText("GUARDAR");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/editar.png"))); // NOI18N
        jbModificar.setText("MODIFICAR");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/eliminar_1.png"))); // NOI18N
        jbEliminar.setText("ELIMINAR");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/reparar.png"))); // NOI18N
        jButton1.setText("INACTIVO");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tabla.setBackground(new java.awt.Color(255, 255, 255));
        tabla.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        tabla.setForeground(new java.awt.Color(0, 0, 0));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel2)))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jbNuevo)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jrEstado)
                                    .addComponent(jtPrecio, javax.swing.GroupLayout.DEFAULT_SIZE, 153, Short.MAX_VALUE)
                                    .addComponent(jtNombre)
                                    .addComponent(jtStock)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jbGuardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbModificar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jbEliminar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jbBuscar))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jtStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jrEstado))
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
        try {
            int codigo = Integer.parseInt(jtCodigo.getText());
            ProductoData productoData = new ProductoData();

// Realiza la bÃºsqueda de la mesa por ID
            Producto pro = productoData.buscarProductoporCodigo(codigo);

            if (pro != null) {
                // Si se encuentra el alumno, muestra su informaciÃ³n en los campos de texto

                jtNombre.setText(String.valueOf(pro.getNombreProducto()));
                jtPrecio.setText(String.valueOf(pro.getPrecio()));
                jtStock.setText(String.valueOf(pro.getStock()));
                jrEstado.setSelected(pro.isEstado());

            }

        } catch (NumberFormatException n) {

            JOptionPane.showMessageDialog(this, "Debe ingresar un numero vÃ¡lido");
        }
        recargar();
    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
        limpiar();
        jtCodigo.requestFocus();
        jtNombre.setEnabled(true);
        jtPrecio.setEnabled(true);
        jrEstado.setEnabled(true);
        jtStock.setEnabled(true);
        jbModificar.setEnabled(true);
        jbGuardar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbEliminar.setEnabled(true);

    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:
        try {
            int codigo = Integer.parseInt(jtCodigo.getText());
            String nombre = jtNombre.getText();
            int precio = Integer.parseInt(jtPrecio.getText());
            int stock = Integer.parseInt(jtStock.getText());

            // ValidaciÃ³n del cÃ³digo
            if (codigo <= 0) {
                JOptionPane.showMessageDialog(this, "El cÃ³digo del producto debe ser un nÃºmero positivo.");
                return;
            }
            if (nombre.isEmpty()) {
                JOptionPane.showMessageDialog(this, "El nombre del producto no puede estar vacÃ­o.");
                return;
            }

            // ValidaciÃ³n del precio
            if (precio <= 0) {
                JOptionPane.showMessageDialog(this, "El precio del producto debe ser un nÃºmero positivo.");
                return;
            }

            // ValidaciÃ³n del stock
            if (stock < 0) {
                JOptionPane.showMessageDialog(this, "El stock del producto no puede ser un nÃºmero negativo.");
                return;
            }

            boolean estado = jrEstado.isSelected();
            Producto pro = new Producto(nombre, precio, stock, codigo, estado);
            ProductoData pd = new ProductoData();
            pd.guardarProducto(pro);
            recargar();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "AsegÃºrate de ingresar nÃºmeros vÃ¡lidos en los campos de cÃ³digo, precio y stock.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al guardar el producto: " + e.getMessage());
        }
    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        // TODO add your handling code here:

        try {
            int codigo = Integer.parseInt(jtCodigo.getText());
            String nombre = jtNombre.getText();
            int precio = Integer.parseInt(jtPrecio.getText());
            int stock = Integer.parseInt(jtStock.getText());
            boolean estado = jrEstado.isSelected();

            if (codigo <= 0) {
                JOptionPane.showMessageDialog(null, "El cÃ³digo del producto debe ser un nÃºmero positivo.");
                return;
            }

            ProductoData pd = new ProductoData();

            Producto pro = pd.buscarProductoporCodigo(codigo);
            if (pro != null) {
                pro.setCodigo(codigo);
                pro.setNombreProducto(nombre);
                pro.setPrecio(precio);
                pro.setStock(stock);
                pro.setEstado(estado);
                pd.modificarProducto(pro);
            }

        } catch (NumberFormatException n) {
            JOptionPane.showMessageDialog(null, "Debe ingresar un id vÃ¡lido");
        }
        recargar();
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:

        try {
            int codigo = Integer.parseInt(jtCodigo.getText());
            if (codigo <= 0) {
                JOptionPane.showMessageDialog(this, "El cÃ³digo del producto debe ser un nÃºmero positivo.");
                return;
            }

            ProductoData prodEncontrado = new ProductoData();
            Producto pro = prodEncontrado.buscarProductoporCodigo(codigo);

            if (pro != null) {
//             Si se encuentra el producto, lo elimÃ­na de la base de datos
                prodEncontrado.eliminarProducto(codigo);
                limpiar();

            } else {
//             Si no se encuentra el alumno, muestra un mensaje de error
                JOptionPane.showMessageDialog(this, "Producto no encontrado");
            }
            recargar();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un cÃ³digo vÃ¡lido (nÃºmero entero).");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al eliminar el producto: " + e.getMessage());
        }

    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {

            int codigo = Integer.parseInt(jtCodigo.getText());
            if (codigo <= 0) {
                JOptionPane.showMessageDialog(this, "El cÃ³digo del producto debe ser un nÃºmero positivo.");
                return;
            }

            ProductoData prodEncontrado = new ProductoData();
            Producto pro = prodEncontrado.buscarProductoporCodigo(codigo);

            if (pro != null) {
//             Si se encuentra el producto, lo elimÃ­na de la base de datos
                prodEncontrado.eliminarProductoLogico(codigo);
                limpiar();

            } else {
//             Si no se encuentra el alumno, muestra un mensaje de error
                JOptionPane.showMessageDialog(this, "Producto no encontrado");
            }
            recargar();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Debe ingresar un cÃ³digo vÃ¡lido (nÃºmero entero).");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JRadioButton jrEstado;
    private javax.swing.JTextField jtCodigo;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTextField jtPrecio;
    private javax.swing.JTextField jtStock;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
private void desactivarCampos() {
        jtCodigo.setEnabled(false);
        jtNombre.setEnabled(false);
        jtPrecio.setEnabled(false);
        jrEstado.setSelected(false);
        jtStock.setEnabled(false);
    }

    private void activarCampos() {
        jtCodigo.setEnabled(true);
        jtNombre.setEnabled(true);
        jtPrecio.setEnabled(true);
        jrEstado.setSelected(true);
        jtStock.setEnabled(true);
    }

    private void limpiar() {

        jtCodigo.setText("");
        jtNombre.setText("");
        jtPrecio.setText("");
        jrEstado.setSelected(false);
        jtStock.setText("");
    }

    private void armarCabecera1() {
        ArrayList<Object> columnas = new ArrayList<>();
        modelo1.addColumn("Codigo");
        modelo1.addColumn("Nombre");
        modelo1.addColumn("Precio");
        modelo1.addColumn("Stock");
        modelo1.addColumn("Estado");
        tabla.setModel(modelo1);
    }

    private void borrarFilas() {
        int filas = tabla.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            modelo1.removeRow(f);
        }
    }

    private void armarTabla() {
        listaProductos = (ArrayList<Producto>) pd.listarProductos();
        for (Producto x : listaProductos) {
            modelo1.addRow(new Object[]{x.getCodigo(), x.getNombreProducto(), x.getPrecio(), x.getStock(), x.isEstado()});

        }

    }

    private void recargar() {
        borrarFilas();
        armarTabla();
    }
}
