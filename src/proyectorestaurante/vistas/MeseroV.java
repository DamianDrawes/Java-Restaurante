/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package proyectorestaurante.vistas;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import proyectorestaurante.AccesoAdatos.MesaData;
import proyectorestaurante.AccesoAdatos.MeseroData;
import proyectorestaurante.entidades.Mesa;
import proyectorestaurante.entidades.Mesero;

/**
 *
 * @author Lourdes
 */
public class MeseroV extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo = new DefaultTableModel() {
        public boolean isCellEditable(int fila, int columna) {
            return false;
        }
    };
    private ArrayList<Mesero> listaMeseros;
    private MeseroData md=new MeseroData();
    private Mesero mesero= new Mesero();
    /**
     * Creates new form MeseroV
     */
    public MeseroV() {
        initComponents();
        armarCabecera();
        armarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jtNombre = new javax.swing.JTextField();
        jtApellido = new javax.swing.JTextField();
        jtId = new javax.swing.JTextField();
        jrEstado = new javax.swing.JRadioButton();
        jbNuevo = new javax.swing.JButton();
        jbGuardar = new javax.swing.JButton();
        jbModificar = new javax.swing.JButton();
        jbEliminar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabla = new javax.swing.JTable();
        jbBuscar = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jtDni = new javax.swing.JTextField();
        jBaja = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Administracion de meseros");

        jLabel1.setFont(new java.awt.Font("Courier New", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/camarero.png"))); // NOI18N
        jLabel1.setText("GESTION DE MESEROS");

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Nombre:");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Apellido:");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Dni:");

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Estado:");

        jbNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/registro.png"))); // NOI18N
        jbNuevo.setText("Nuevo");
        jbNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbNuevoActionPerformed(evt);
            }
        });

        jbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/salvar.png"))); // NOI18N
        jbGuardar.setText("Guardar");
        jbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbGuardarActionPerformed(evt);
            }
        });

        jbModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/editar.png"))); // NOI18N
        jbModificar.setText("Modificar");
        jbModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbModificarActionPerformed(evt);
            }
        });

        jbEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/eliminar_1.png"))); // NOI18N
        jbEliminar.setText("Eliminar");
        jbEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbEliminarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        tabla.setBackground(new java.awt.Color(255, 255, 255));
        tabla.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        tabla.setForeground(new java.awt.Color(0, 0, 0));
        tabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabla);

        jbBuscar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/proyectorestaurante/recursos/lupa_1.png"))); // NOI18N
        jbBuscar.setText("Buscar");
        jbBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbBuscarActionPerformed(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("ID:");

        jBaja.setText("Alta/Baja");
        jBaja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBajaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(12, 12, 12)
                                    .addComponent(jLabel6)))
                            .addGap(37, 37, 37)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jtNombre)
                                        .addComponent(jtApellido)
                                        .addComponent(jtId)
                                        .addComponent(jrEstado)
                                        .addComponent(jtDni, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jbBuscar)
                                        .addComponent(jbNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jbModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                        .addComponent(jbGuardar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jbEliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jBaja)
                            .addGap(18, 18, 18)
                            .addComponent(jbSalir)
                            .addGap(20, 20, 20)))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addComponent(jtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jbBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jtDni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addComponent(jbNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(jbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33))
                    .addComponent(jLabel6))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jrEstado)
                    .addComponent(jLabel5))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(2, 29, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBaja, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jbSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(5, 5, 5))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbBuscarActionPerformed
        // TODO add your handling code here:
      try {
        String dniText = jtDni.getText().trim(); // Obtén el texto del campo DNI y elimina espacios en blanco
        if (dniText.length() == 8) { // Verifica que el DNI tenga una longitud de 8 caracteres
            int dni = Integer.parseInt(dniText);

            // Validar que el DNI no sea negativo
            if (dni > 0) {
                MeseroData meseroEncontrado = new MeseroData();
                Mesero mesero = meseroEncontrado.buscarMeseroporDni(dni);

                if (mesero != null) {
                    // Si se encuentra el mesero, muestra su información en los campos de texto
                    jtNombre.setText(mesero.getNombre());
                    jtApellido.setText(mesero.getApellido());
                    jrEstado.setSelected(mesero.isEstado());
                    jtId.setText(String.valueOf(mesero.getIdMesero()));
                } else {
                    JOptionPane.showMessageDialog(this, "Mesero no encontrado.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "El DNI no puede ser un número negativo.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "El DNI debe tener una longitud de 8 caracteres ");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Debe ingresar un número válido para el DNI del mesero.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al buscar al mesero: " + e.getMessage());
    }
                                  

    }//GEN-LAST:event_jbBuscarActionPerformed

    private void jbNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbNuevoActionPerformed
        // TODO add your handling code here:
            activarCampos();
        limpiar();
        jtDni.requestFocus();
        jtNombre.setEnabled(true);
        jtApellido.setEnabled(true);
        jrEstado.setEnabled(true);
        jtId.setEnabled(true);
        jbModificar.setEnabled(true);
        jbGuardar.setEnabled(true);
        jbBuscar.setEnabled(true);
        jbEliminar.setEnabled(true);
        
    }//GEN-LAST:event_jbNuevoActionPerformed

    private void jbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbGuardarActionPerformed
        // TODO add your handling code here:
        try {
            String dniText = jtDni.getText().trim(); // Obtén el texto del campo DNI y elimina espacios en blanco
            if (dniText.length() == 8) {
                int dni = Integer.parseInt(dniText);

                if (dni >= 0) {
                    String nombre = jtNombre.getText();
                    String apellido = jtApellido.getText();

                    if (nombre.matches("^[a-zA-Z ]+$") && apellido.matches("^[a-zA-Z ]+$")) {
                        boolean estado = jrEstado.isSelected();

                        Mesero mesero = new Mesero(nombre, apellido, dni, estado);

                        MeseroData md = new MeseroData();
                        md.guardarMesero(mesero);
                        recargar();
                    } else {
                        JOptionPane.showMessageDialog(this, "En los campos 'Nombre' y 'Apellido' ingrese solo letras y espacios.");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "El DNI no puede ser un número negativo.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "El DNI debe tener una longitud de 8 caracteres.");
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un DNI válido.");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Error al guardar al mesero: " + e.getMessage());
        }

    }//GEN-LAST:event_jbGuardarActionPerformed

    private void jbModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbModificarActionPerformed
        // TODO add your handling code here:
         try {
        int dni = Integer.parseInt(jtDni.getText());
        String nombre = jtNombre.getText();
        String apellido = jtApellido.getText();
        boolean estado = jrEstado.isSelected();

        MeseroData meseroEncontrado = new MeseroData();
        Mesero mesero = meseroEncontrado.buscarMeseroporDni(dni);
        
        if (mesero != null) {
            if (nombre.matches("^[a-zA-Z ]+$") && apellido.matches("^[a-zA-Z ]+$")) {
                mesero.setDni(dni);
                mesero.setNombre(nombre);
                mesero.setApellido(apellido);
                mesero.setEstado(estado);
                meseroEncontrado.modificarMesero(mesero);
                recargar();
            } else {
                JOptionPane.showMessageDialog(this, "En los campos 'Nombre' y 'Apellido' ingrese solo letras y espacios.");
            }
        } else {
            JOptionPane.showMessageDialog(this, "Mesero no encontrado.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Ingrese un DNI válido.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al modificar al mesero: " + e.getMessage());
    }
    }//GEN-LAST:event_jbModificarActionPerformed

    private void jbEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbEliminarActionPerformed
        // TODO add your handling code here:
         try {
        int dni = Integer.parseInt(jtDni.getText());
        MeseroData meseroEncontrado = new MeseroData();
        Mesero mesero = meseroEncontrado.buscarMeseroporDni(dni);

        if (mesero != null) {
            meseroEncontrado.eliminarMesero(dni);
            recargar();
        } else {
            JOptionPane.showMessageDialog(this, "Mesero no encontrado.");
        }
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Ingrese un DNI válido.");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Error al eliminar al mesero: " );
    }
    }//GEN-LAST:event_jbEliminarActionPerformed

    private void jBajaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBajaActionPerformed
        // TODO add your handling code here:
      int fila = tabla.getSelectedRow();
    if (fila >= 0) {
        mesero.setIdMesero((int) modelo.getValueAt(fila, 0));
        mesero.setNombre((String) modelo.getValueAt(fila, 1));
        mesero.setApellido((String) modelo.getValueAt(fila, 2));
        mesero.setDni((int) modelo.getValueAt(fila, 3));
        if ((Boolean) modelo.getValueAt(fila, 4)) {
            mesero.setEstado(false);
        } else {
            mesero.setEstado(true);
        }
        md.modificarMesero(mesero);
        recargar();
    } else {
        JOptionPane.showMessageDialog(this, "Seleccione un mesero en la tabla o una mesa ocupada.");
    }
    }//GEN-LAST:event_jBajaActionPerformed

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jbSalirActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBaja;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbBuscar;
    private javax.swing.JButton jbEliminar;
    private javax.swing.JButton jbGuardar;
    private javax.swing.JButton jbModificar;
    private javax.swing.JButton jbNuevo;
    private javax.swing.JButton jbSalir;
    private javax.swing.JRadioButton jrEstado;
    private javax.swing.JTextField jtApellido;
    private javax.swing.JTextField jtDni;
    private javax.swing.JTextField jtId;
    private javax.swing.JTextField jtNombre;
    private javax.swing.JTable tabla;
    // End of variables declaration//GEN-END:variables
private void desactivarCampos() {
        jtDni.setEnabled(false);
        jtNombre.setEnabled(false);
        jtApellido.setEnabled(false);
        jrEstado.setSelected(false);
        jtId.setEnabled(false);
    }

    private void activarCampos() {
       jtDni.setEnabled(true);
        jtNombre.setEnabled(true);
        jtApellido.setEnabled(true);
        jrEstado.setSelected(true);
        jtId.setEnabled(true);
    }

    private void limpiar() {
        jtDni.setText("");
        jtNombre.setText("");
        jtApellido.setText("");
        jrEstado.setSelected(false);
        jtId.setText("");   
    }

        private void armarCabecera() {
        modelo.addColumn("IdMesero");
        modelo.addColumn("Nombre");
        modelo.addColumn("Apellido");
        modelo.addColumn("DNI");
        modelo.addColumn("Estado");
        tabla.setModel(modelo);
    }

    private void borrarFilas() {
        int filas = tabla.getRowCount() - 1;
        for (int f = filas; f >= 0; f--) {
            modelo.removeRow(f);
        }
    }

    private void armarTabla(){
        listaMeseros=(ArrayList<Mesero>) md.listarMeseros();
        for(Mesero x:listaMeseros){
            modelo.addRow(new Object[]{x.getIdMesero(),x.getNombre(),x.getApellido(),x.getDni(),x.isEstado()});
        }
    }
    
    private void recargar(){
        borrarFilas();
        armarTabla();
    }
}
